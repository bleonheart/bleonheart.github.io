name: ci
on:
  push:
    branches:
      - master
      - main
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material mkdocs-awesome-pages-plugin
      - run: mkdocs build
      - name: Copy versioning files to build directory
        run: |
          mkdir -p site/versioning
          # Copy all JSON files if any exist
          if compgen -G "docs/versioning/*.json" > /dev/null; then
            cp docs/versioning/*.json site/versioning/
          else
            echo "No versioning JSON files found; skipping copy."
          fi
          # Ensure modules.json is also accessible from the root of the GitHub Pages site
          if [ -f docs/versioning/modules.json ]; then cp docs/versioning/modules.json site/; fi
      - name: Deploy to GitHub Pages
        run: |
          cd site
          # Ensure we're in the correct directory with the built site
          ls -la
          # Initialize git repository in site directory for gh-pages deployment
          git init
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Deploy to GitHub Pages"
          # Force push to gh-pages branch
          git push --force https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git main:gh-pages